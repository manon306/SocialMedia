
@* _GetAllPosts *@
@model (List<PostVm>,ViewProfileVM)
@{
    ViewData["Title"] = "Posts";
    var profileImagePath = ViewData["ProfileImage"] as string ?? "default-profile.jpg";
}
<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="mb-0">Posts </h3>
                <span class="badge bg-accent rounded-pill">@Model.Item1.Count Post</span>
            </div>
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
           
            @foreach (var post in Model.Item1)
            {
                <div class="card post-card">
                    <div class="card-header">
                        <div class="d-flex align-items-center">
                            <img src="~/Files/@(Model.Item2?.ProfileImagePath ?? "default-profile.jpg")" class="rounded-circle user-avatar me-3" alt="Profile Image">
                            <div class="flex-grow-1">
                                <div class="user-name">@User.Identity.Name</div>
                                <div class="user-title">مطور واجهات أمامية</div>
                                @if (post.Shares != null && post.Shares.Any())
                                {
                                    <div class="mt-2">
                                        @foreach (var share in post.Shares.Take(3))
                                        {
                                            <small class="text-muted">
                                                <i class="bi bi-share-fill text-success me-1"></i>
                                                Shared by @share.User?.UserName on @share.SharedAt.ToString("MMM dd")
                                            </small>
                                            <br>
                                        }
                                        @if (post.Shares.Count > 3)
                                        {
                                            <small class="text-muted">and @(post.Shares.Count - 3) more</small>
                                        }
                                    </div>
                                }
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-sm text-muted" type="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-three-dots"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <form asp-controller="Post" asp-action="ToggleSavedPosts" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@post.ID" />
                                            <button type="submit" class="dropdown-item">
                                                <i class="bi bi-bookmark-check me-2"></i>Save
                                            </button>
                                        </form>
                                    </li>
                                    <li>
                                        <form asp-controller="Post" asp-action="ToggleArchivePosts" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@post.ID" />
                                            <button type="submit" class="dropdown-item">
                                                <i class="bi bi-archive me-2"></i>Archive
                                            </button>
                                        </form>
                                    </li>
                                    <li>
                                        <a asp-action="UpdatePost" asp-route-id="@post.ID" asp-controller="Post" class="dropdown-item">
                                            <i class="bi bi-pencil me-2"></i>Edit
                                        </a>
                                    </li>
                                    <li><a class="dropdown-item" href="#"><i class="bi bi-link-45deg me-2"></i>Copy Link</a></li>
                                    <li>
                                        <form asp-controller="Post" asp-action="DeletePost" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@post.ID" />
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="bi bi-trash me-2"></i> Delete
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <p class="post-content">@post.Content</p>

                        @if (post.Image != null && post.Image.Any() || post.Videos != null && post.Videos.Any())
                        {
                            <div class="media-container d-flex flex-wrap gap-2 mb-3">
                                @if (post.Image != null)
                                {
                                    @foreach (var image in post.Image)
                                    {
                                        <div class="media-item">
                                            <img src="~/@image" class="post-image" alt="Image" />
                                        </div>
                                    }
                                }

                                @if (post.Videos != null)
                                {
                                    @foreach (var video in post.Videos)
                                    {
                                        <div class="media-item">
                                            <video controls class="post-video">
                                                <source src="~/@video" type="video/mp4" />
                                                Not Allowed
                                            </video>
                                        </div>
                                    }
                                }
                            </div>
                        }
                        <div class="engagement-stats text-muted mb-3">
                            <span class="me-3"><i class="bi bi-heart-fill text-danger me-1"></i> @post.Reacts.Count Like</span>
                            <span class="me-3"><i class="bi bi-chat-fill text-info me-1"></i> @post.Comments.Count Comments</span>
                            <span><i class="bi bi-share-fill text-success me-1"></i> @post.Shares.Count Share</span>
                        </div>
                        <div class="post-actions">
                            <div class="btn-group react-btn-group" data-postid="@post.ID">
                                <button type="button" class="btn action-btn react-main-btn">
                                    <i class="bi bi-heart react-icon"></i> 
                                    <span class="react-text">Like</span>
                                </button>
                                <button type="button" class="btn action-btn dropdown-toggle dropdown-toggle-split" 
                                        data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="visually-hidden">Toggle Reacts</span>
                                </button>
                                <ul class="dropdown-menu react-dropdown">
                                    <li>
                                        <a class="dropdown-item react-option" data-type="@reactType.Love">
                                            <i class="bi bi-heart-fill text-danger me-2"></i> Love
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item react-option" data-type="@reactType.Like">
                                            <i class="bi bi-hand-thumbs-up-fill text-primary me-2"></i> Like
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item react-option" data-type="@reactType.Care">
                                            <i class="bi bi-emoji-heart-eyes-fill text-warning me-2"></i> Care
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item react-option" data-type="@reactType.angry">
                                            <i class="bi bi-emoji-angry-fill text-danger me-2"></i> Angry
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <button class="btn action-btn">
                                <i class="bi bi-chat"></i> Comment
                            </button>
                            <button class="btn action-btn share-btn" data-postid="@post.ID">
                                <i class="bi bi-share"></i> Share
                            </button>

                        </div>
                        <!-- فورم المشاركة مخفي -->
                        <form class="share-form d-none mt-2" asp-controller="Post" asp-action="SharePost" method="post">
                            <input type="hidden" name="PostId" value="@post.ID" />

                            <input type="text" name="Content" class="form-control mb-2" placeholder="Add a message to your share..." />
                            <button type="submit" class="btn btn-sm btn-success">Share</button>
                            <button type="button" class="btn btn-sm btn-secondary cancel-share" data-postid="@post.ID">Cancel</button>
                        </form>
                        <div class="d-flex align-items-center mt-3">
                            <img src="~/Files/@(Model.Item2?.ProfileImagePath ?? "default-profile.jpg")" class="rounded-circle me-2 border" width="40" height="40" alt="Profile Image">
                            <div class="flex-grow-1">
                                <form asp-controller="Comment" asp-action="AddComment" method="post" class="d-flex">
                                    <input type="hidden" name="PostID" value="@post.ID" />
                                    <input type="text" name="Content" class="form-control rounded-pill me-2" placeholder="Write a comment..." aria-label="Add Comment">
                                    <button class="btn btn-primary rounded-pill" type="submit">
                                        <i class="bi bi-send"></i>
                                    </button>
                                </form>
                            </div>
                        </div>

                        <!-- الكومنتات -->
                        <div class="comments-container mt-3 p-2  rounded text-black" id="comments-@post.ID">
                            
                            <!-- الكومنتات هتيجي هنا -->
                        </div>



                    </div>
                </div>
            }

            @if (Model.Item1.Count == 0)
            {
                <div class="text-center py-5">
                    <i class="bi bi-bookmark-x" style="font-size: 3rem; color: var(--muted-text);"></i>
                    <h4 class="mt-3">No Posts yet</h4>
                </div>
            }
        </div>
    </div>
</div>
<style>
    :root {
        --primary-color: #131a2a;
        --secondary-color: #202938;
        --header-color: #3a4354;
        --accent-color: #4e57d4;
        --text-color: #ffffff;
        --muted-text: #a8b3cf;
    }

    body {
        background-color: var(--primary-color);
        color: var(--text-color);
    }

    .bg-header {
        background-color: var(--header-color) !important;
    }

    .bg-secondary {
        background-color: var(--secondary-color) !important;
    }

    .bg-accent {
        background-color: var(--accent-color) !important;
    }

    .btn-accent {
        background-color: var(--accent-color);
        color: white;
        border: none;
    }

        .btn-accent:hover {
            background-color: #3f47b3;
            color: white;
        }

    .text-muted {
        color: var(--muted-text) !important;
    }

    .post-card {
        border: none;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .action-btn:hover {
        background-color: rgba(255, 255, 255, 0.1);
    }

    .form-control {
        color: var(--text-color);
    }

        .form-control:focus {
            background-color: var(--secondary-color);
            color: var(--text-color);
            border-color: var(--accent-color);
            box-shadow: 0 0 0 0.25rem rgba(78, 87, 212, 0.25);
        }

    .dropdown-menu {
        background-color: var(--header-color);
        border: none;
    }

    .dropdown-item {
        color: var(--muted-text);
    }

        .dropdown-item:hover {
            background-color: var(--secondary-color);
            color: var(--text-color);
        }

    .border-accent {
        border-color: var(--accent-color) !important;
    }

    .media-container {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
    }

    .media-item {
        flex: 1 1 200px;
        max-width: 300px;
    }

    .post-image, .post-video {
        width: 100%;
        height: 180px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        transition: transform 0.2s ease;
    }

        .post-image:hover, .post-video:hover {
            transform: scale(1.02);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

    .post-video {
        background-color: #000;
    }

    .comments-container {
        max-height: 300px;
        overflow-y: auto;
    }

        /* تخصيص شريط التمرير */
        .comments-container::-webkit-scrollbar {
            width: 6px;
        }

        .comments-container::-webkit-scrollbar-track {
            background: var(--secondary-color);
            border-radius: 10px;
        }

        .comments-container::-webkit-scrollbar-thumb {
            background: var(--accent-color);
            border-radius: 10px;
        }

    .comment-item {
        padding: 8px 0;
    }

    .comment-content {
        background-color: var(--header-color);
        border-radius: 16px;
        position: relative;
    }

        .comment-content:after {
            content: '';
            position: absolute;
            left: -8px;
            top: 12px;
            width: 0;
            height: 0;
            border-top: 8px solid transparent;
            border-bottom: 8px solid transparent;
            border-right: 8px solid var(--header-color);
        }

    .comment-actions .btn-link:hover {
        color: var(--accent-color) !important;
        background-color: rgba(78, 87, 212, 0.1);
        border-radius: 4px;
    }

    .replies .reply {
        padding: 8px 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
    }

        .replies .reply:last-child {
            border-bottom: none;
        }

    .reply-form, .edit-comment-form {
        transition: all 0.3s ease;
    }
    /* تنسيقات إضافية للتفاعلات */
    .react-btn-group .btn.active {
        background-color: rgba(78, 87, 212, 0.1);
    }

    .react-dropdown {
        background-color: var(--header-color);
        border: none;
    }

        .react-dropdown .dropdown-item {
            color: var(--muted-text);
            padding: 0.5rem 1rem;
        }

            .react-dropdown .dropdown-item:hover {
                background-color: var(--secondary-color);
                color: var(--text-color);
            }

    .react-btn-group .dropdown-toggle::after {
        margin-left: 0.25rem;
    }

    /* تأثيرات عند التمرير على خيارات التفاعل */
    .react-option:hover {
        transform: scale(1.05);
        transition: transform 0.2s ease;
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var currentUser = '@User.Identity.Name';
</script>
<script>
        $(document).ready(function () {
            // تحميل معلومات التفاعلات لكل منشور
            @foreach (var post in Model.Item1)
            {
                    <text>
                    loadReactsInfo(@post.ID);
                    </text>
            }

            // إضافة تفاعل جديد
            $(document).on('click', '.react-option', function() {
                var postId = $(this).closest('.react-btn-group').data('postid');
                var reactType = $(this).data('type');

                toggleReact(postId, reactType);
            });

            // إزالة التفاعل عند الضغط على الزر الرئيسي
            $(document).on('click', '.react-main-btn', function() {
                var postId = $(this).closest('.react-btn-group').data('postid');
                var currentReact = $(this).find('.react-icon').data('current-react');

                if (currentReact) {
                    // إذا كان هناك تفاعل موجود، إزالته
                    toggleReact(postId, currentReact);
                } else {
                    // إذا لم يكن هناك تفاعل، إضافة Like افتراضي
                    toggleReact(postId, @((int)reactType.Like));
                }
            });
        });

        function toggleReact(postId, reactType) {
            $.ajax({
                url: '/React/ToggleReact',
                type: 'POST',
                data: {
                    postId: postId,
                    type: reactType
                },
                success: function(response) {
                    if (response.success) {
                        updateReactUI(postId, response);
                    } else {
                        showAlert('Error', response.message, 'danger');
                    }
                },
                error: function() {
                    showAlert('Error', 'An error occurred while reacting', 'danger');
                }
            });
        }

        function loadReactsInfo(postId) {
            $.ajax({
                url: '/React/GetReactsInfo',
                type: 'GET',
                data: { postId: postId },
                success: function(response) {
                    if (response.success) {
                        updateReactUI(postId, response);
                    }
                },
                error: function() {
                    console.log('Error loading reacts info for post ' + postId);
                }
            });
        }

        function updateReactUI(postId, data) {
            // تحديث العدد الإجمالي
            $('.reacts-count[data-postid="' + postId + '"]').text(data.count);

            // تحديث الزر الرئيسي بناءً على تفاعل المستخدم
            var reactBtn = $('.react-btn-group[data-postid="' + postId + '"] .react-main-btn');
            var reactIcon = reactBtn.find('.react-icon');
            var reactText = reactBtn.find('.react-text');

            if (data.userReactType !== null) {
                // إذا كان المستخدم متفاعل
                reactBtn.addClass('active');

                // تحديث الأيقونة والنص بناءً على نوع التفاعل
                switch (data.userReactType) {
                    case @((int)reactType.Love):
                        reactIcon.removeClass().addClass('bi bi-heart-fill text-danger');
                        reactText.text('Love');
                        break;
                    case @((int)reactType.Like):
                        reactIcon.removeClass().addClass('bi bi-hand-thumbs-up-fill text-primary');
                        reactText.text('Like');
                        break;
                    case @((int)reactType.Care):
                        reactIcon.removeClass().addClass('bi bi-emoji-heart-eyes-fill text-warning');
                        reactText.text('Care');
                        break;
                    case @((int)reactType.angry):
                        reactIcon.removeClass().addClass('bi bi-emoji-angry-fill text-danger');
                        reactText.text('Angry');
                        break;
                }

                // حفظ نوع التفاعل الحالي
                reactIcon.data('current-react', data.userReactType);
            } else {
                // إذا لم يكن المستخدم متفاعل
                reactBtn.removeClass('active');
                reactIcon.removeClass().addClass('bi bi-heart');
                reactText.text('Like');
                reactIcon.data('current-react', null);
            }

            // تحديث الملخص (يمكنك إضافة هذا لاحقاً إذا أردت عرض تفاصيل أكثر)
            console.log('React summary for post ' + postId + ':', data.summary);
        }

        function showAlert(title, message, type) {
            // دالة لعرض التنبيهات
            var alertClass = 'alert-' + type;
            var alertHtml = `
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    <strong>${title}</strong> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;

            // إضافة التنبيه في أعلى الصفحة
            $('.container.py-4').prepend(alertHtml);

            // إزالة التنبيه تلقائياً بعد 3 ثواني
            setTimeout(function() {
                $('.alert').alert('close');
            }, 3000);
        }
function loadComments(postId) {
    $.ajax({
        url: `/Comment/GetAllComments?id=${postId}`,
        type: "GET",
        success: function (data) {
            let container = $(`#comments-${postId}`);
            container.empty();
            if (data && data.length > 0) {
                data.forEach(c => {
                    container.append(`
                                    <div class="d-flex mb-3 comment-item" id="comment-${c.id}">
                                    <div class="flex-shrink-0">
                                        <img src="~/Files/@(Model.Item2?.ProfileImagePath ?? "default-profile.jpg")" class="rounded-circle me-2" width="40" height="40" alt="Profile">
                                    </div>
        <div class="flex-grow-1 ms-2">
            <div class="comment-content p-3 rounded" id="comment-text-${c.id}">
                <div class="d-flex justify-content-between align-items-start mb-1">
                    <strong class="d-block text-white">${currentUser}</strong>
                    <span class="text-muted small">Just now</span>
                </div>
                <p class="mb-0 text-white" id="comment-content-${c.id}">${c.content}</p>
            </div>

            <!-- فورم التعديل -->
            <form class="edit-comment-form d-none mt-2" data-id="${c.id}">
                <input type="hidden" name="ID" value="${c.id}" />
                <input type="text" name="Content" class="form-control mb-2 bg-secondary text-white border-0" value="${c.content}" />
                <div class="d-flex">
                    <button type="submit" class="btn btn-sm btn-accent me-2">Save</button>
                    <button type="button" class="btn btn-sm btn-outline-light cancel-edit" data-id="${c.id}">Cancel</button>
                </div>
            </form>

            <div class="comment-actions mt-2">
                <button class="btn btn-sm btn-link text-muted p-0 me-3 text-decoration-none">Like</button>
                <button class="btn btn-sm btn-link text-muted p-0 me-3 text-decoration-none reply-btn" data-id="${c.id}">Reply</button>
                <button class="btn btn-sm btn-link text-muted p-0 me-3 text-decoration-none edit-btn" data-id="${c.id}">Edit</button>
                <button type="button" class="btn btn-sm btn-link text-danger p-0 delete-comment-btn" data-id="${c.id}">
                    <i class="bi bi-trash me-1"></i> Delete
                </button>
            </div>

            <!-- الردود -->
            <div class="replies mt-2 ms-3 ps-3 border-start border-secondary" id="replies-${c.id}">
                <!-- سيتم إضافة الردود هنا -->
            </div>

            <!-- نموذج الرد (مخفي افتراضيًا) -->
            <form class="reply-form d-none mt-2" data-commentid="${c.id}">
                <div class="d-flex align-items-center">
                                                    <img src="/Files/@profileImagePath" class="rounded-circle me-2" width="40" height="40" alt="Profile">

                    <input type="hidden" name="ParentCommentID" value="${c.id}" />
                    <input type="text" name="Content" class="form-control form-control-sm rounded-pill bg-secondary text-white border-0 me-2" placeholder="Write a reply..." />
                    <button type="submit" class="btn btn-sm btn-accent rounded-circle d-flex align-items-center justify-content-center" style="width: 32px; height: 32px;">
                        <i class="bi bi-send"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-light ms-2 cancel-reply" data-commentid="${c.id}">Cancel</button>
                </div>
            </form>
        </div>
    </div>
                    `);
                        loadReplies(c.id);
                });
            } else {
                container.append(`<p class="text-muted">No comments yet.</p>`);
            }
        },
        error: function () {
            console.log("Error loading comments.");
        }
        });
    }
    // إظهار الفورم عند الضغط على Edit
    $(document).on("click", ".edit-btn", function () {
        let id = $(this).data("id");
        $(`#comment-text-${id}`).hide();
        $(`form[data-id='${id}']`).removeClass("d-none");
    });

    // إلغاء التعديل
    $(document).on("click", ".cancel-edit", function () {
        let id = $(this).data("id");
        $(`#comment-text-${id}`).show();
        $(`form[data-id='${id}']`).addClass("d-none");
    });

    // إرسال التعديل
    $(document).on("submit", ".edit-comment-form", function (e) {
        e.preventDefault();
    let form = $(this);
    let id = form.data("id");
    let content = form.find("input[name='Content']").val();

    $.ajax({
        url: "/Comment/UpdateComment",
            type: "POST",
            data: {ID: id, Content: content },
            success: function () {
                $(`#comment-content-${id}`).text(content);
                form.addClass("d-none");
                    $(`#comment-text-${id}`).show();
                    },
            error: function () {
                alert("Error updating comment");
}
                });
    });
    $(document).on("click", ".delete-comment-btn", function () {
        let id = $(this).data("id");

    $.ajax({
        url: "/Comment/DeleteComment",
        type: "POST",
        data: {Id: id, DeletedBy: currentUser },
        success: function (res) {
                    if (res.success) {
                        $(`#comment-${id}`).remove();
                                } else {
                        alert(res.message || "Error deleting comment");
                                }
                    },
        error: function () {
            alert("Server error while deleting comment");
                }
            });
    });
        // إرسال رد
    $(document).on("submit", ".reply-form", function (e) {
        e.preventDefault();

        let form = $(this);
        let commentId = form.find("input[name='ParentCommentID']").val();
        let content = form.find("input[name='Content']").val();

        $.ajax({
            url: "/Reply/AddComment",   // زي ما عاملتي في الـ Controller
            type: "POST",
            data: { ParentCommentID: commentId, Content: content },
            success: function (res) {
                if (res.success) {
                    // ضيفي الرد في منطقة replies
                    $(`#replies-${commentId}`).append(`
                        <div class="reply bg-light p-2 rounded mb-1">
                            <strong>${currentUser}</strong>: ${content}

                        </div>
                    `);
                    form.find("input[name='Content']").val(""); // امسحي التكست
                } else {
                    alert(res.message || "Error adding reply");
                }
            },
            error: function () {
                alert("Server error while adding reply");
            }
        });
    });

        function loadReplies(commentId) {
        $.ajax({
            url: `/Reply/GetAllComments?id=${commentId}`, // نفس الشكل عندك
            type: "GET",
            success: function (data) {
                let container = $(`#replies-${commentId}`);
                container.find(".reply").remove(); // امسح القديم
                if (data && data.length > 0) {
                    data.forEach(r => {
                        container.append(`
                            <div class="reply bg-light p-2 rounded mb-1">
                                <strong>${currentUser}</strong>: ${r.content}
                            </div>
                        `);
                    });
                }
            },
            error: function () {
                console.log("Error loading replies.");
            }
        });
    }

        // إظهار فورم المشاركة عند الضغط على Share
    $(document).on("click", ".share-btn", function() {
        var postId = $(this).data("postid");
        $(this).closest(".card-body").find(".share-form").removeClass("d-none");
    });

    // إلغاء المشاركة
    $(document).on("click", ".cancel-share", function() {
        $(this).closest(".share-form").addClass("d-none");
    });
        // إظهار نموذج الرد عند الضغط على Reply
    $(document).on("click", ".reply-btn", function () {
        let id = $(this).data("id");
        $(`form[data-commentid='${id}']`).removeClass("d-none");
        $(this).addClass("d-none");
    });

    // إخفاء نموذج الرد عند الضغط على Cancel
    $(document).on("click", ".cancel-reply", function () {
        let id = $(this).data("commentid");
        $(`form[data-commentid='${id}']`).addClass("d-none");
        $(`button.reply-btn[data-id='${id}']`).removeClass("d-none");
    });

    $(document).ready(function () {
        @foreach (var post in Model.Item1)
    {
            <text>loadComments(@post.ID);</text>
    }
    });
</script> 




















